<?php
// $Id$

/**
 * @file
 * Adds more granular permissions for items under 'administer site configuration'.
 *
 * Development by Doc (Sjoerd Arendsen) sjoerd@optixdesigns.com
 * www.optixdesigns.com
 * 
 * Initial development by mrthumpz (Todd Humphrey) todd@iplanitglobal.com
 * www.iplanitglobal.com
 */

/**
 * Configure permission names for urls:
 */
function config_perms_perms() {
  // Load current perms
  $perms = cache_get('config_perms');
  
  // Rebuild if not there
  if(!is_array($perms)) {
    config_perms_cache_rebuild();
    $perms = cache_get('config_perms');
  }
  
  return $perms;
}

/**
 * Configure permission names for urls:
 */
function config_perms_cache_rebuild() {
  $perms = array();
  $result = db_query("SELECT * FROM {config_perms}");
  while ($data = db_fetch_object($result)) {
    $perms[$data->name][] = $data->path;
  }
  
  cache_set('config_perms', $perms);
}

/*******************************************************************************
 * Hook Functions
 ******************************************************************************/
/*

/**
 * Implementation of hook_perm
 * Administer -> User management -> Permissions
 */
function config_perms_perm() {
 return array_keys(config_perms_perms());
}

/**
 * Implementation of hook_theme();.
 */
function config_perms_theme() {
  return array(
    'config_perms_form' => array(
      'arguments' => array('form' => NULL),
      'file' => 'config_perms.admin.inc',
    ),
  );
}

/**
 * Implementation of hook_menu().
*/
function config_perms_menu() {
  $items['config_perms/ahah'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'config_perms_ahah',
    'page arguments' => array(),
    'access arguments' => array('administer site configuration'),
    'file' => 'config_perms.admin.inc',
  );
  
  $items['admin/settings/config_perms'] = array(
    'title' => 'Site Configuration Permissions',
    'description' => 'Adds more granular permissions for items under \'administer site configuration\'',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('config_perms_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'config_perms.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}
 
/**
* Implementation of hook_menu_alter().
*/
function config_perms_menu_alter(&$items) {
  foreach (config_perms_perms() as $perm => $urls) {
    foreach ($urls as $url) {      
      $items[$url]['access callback'] = 'config_perms_access_callback';
      $items[$url]['access arguments'] = array($perm);
    }
  }
  // administer themes:
  foreach (list_themes() as $theme) {
    $items['admin/build/themes/settings/'. $theme->name]['access callback'] = 'config_perms_themes_access';
    $items['admin/build/themes/settings/'. $theme->name]['access arguments'] = array($theme);
  }
}

/**
 * Implementation of hook_disable().
 */
function config_perms_disable() {
  $resetcallback = serialize(array('administer site configuration'));
  db_query("UPDATE {menu_router} SET access_callback = '%s', access_arguments = '%s' WHERE access_callback = '%s'", 'user_access', $resetcallback, 'config_perms_access_callback');
}

/**
* Access callback for theme selection and settings page
*/
function config_perms_access_callback($perm) {  
  return user_access($perm) || user_access('administer site configuration');
}

/**
* Access callback for each theme's settings
*/
function config_perms_themes_access($theme) {
  return (user_access('administer themes') || user_access('administer site configuration')) && ($theme->status || $theme->name == variable_get('admin_theme', '0'));
}